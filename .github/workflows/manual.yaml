name: Manual

on:
  workflow_dispatch:
    inputs:
      product:
        description: 'product name of which to bench'
        type: choice
        required: true
        options:
          - MODERNJS_FRAMEWORK
          - MODERNJS_MODULE
          - RSPRESS
          - RSBUILD
      case:
        description: 'case name of which to bench'
        type: choice
        required: true
        options:
          - app-minimal
          - app-initial
          - app-initial-rspack
          - app-tailwind
          - app-ssr
          - app-ssg
          - app-bff-koa
          - app-arco-pro
          - app-arco-pro-swc
          - app-arco-pro-esbuild
          - app-arco-pro-rspack
          - module-initial
          - module-library
          - module-library-sourcemap
          - module-library-noautoexternal
          - module-library-minify-esbuild
          - module-library-minify-terser
          - module-component
          - rspress-minimal
          - rspress-website
          - rspress-website-mdxjs
          - rsbuild-react
          - rsbuild-vue2
          - rsbuild-vue3
          - rsbuild-lit
          - rsbuild-svelte
          - rsbuild-vanilla
      commitId:
        description: 'commitId of your repo'
      onlyInstallSize:
        description: "If only want install size, set to 'true'"

jobs:
  bench:
    strategy:
      matrix:
        include:
          - case: ${{ github.event.inputs.case }}
            product: ${{ github.event.inputs.product }}

    runs-on: ${{ fromJSON(vars.SELF_LINUX_LABELS || '"ubuntu-latest"') }}

    steps:
      - name: Print runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache-dependency-path: pnpm-lock.yaml

      - name: Install Pnpm
        run: corepack enable && pnpm -v && pnpm store path

      - name: Cache pnpm cache
        uses: actions/cache@v3
        if: ${{ startsWith(runner.name, 'GitHub Actions') }}
        with:
          path: |
            ~/.cache/pnpm
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install Dependencies
        run: pnpm run install:scripts

      - name: ðŸš€ Run specified benchmark
        run: cd scripts && ONLY_INSTALL_SIZE=${{ github.event.inputs.onlyInstallSize }} GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }} COMMIT_ID=${{ github.event.inputs.commitId }} pnpm start ${{ matrix.product }} ${{ matrix.case }}

      - name: Setup git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Install rsync
        run: |
          apt-get update && apt-get install -y rsync

      - name: Update data
        uses: JamesIves/github-pages-deploy-action@v4.4.1
        with:
          branch: gh-pages
          folder: data
          target-folder: data
          git-config-name: gh-pages-bot
          git-config-email: 41898282+github-actions[bot]@users.noreply.github.com
          clean: false
